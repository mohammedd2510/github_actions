FROM ghcr.io/actions/actions-runner:latest

USER root

# Install dependencies and clean up package cache
RUN apt-get update && apt-get install -y \
    curl \
    unzip \
    git \
    zip \
    bash \
    jq \
    wget \
    lib32stdc++6 \
    lib32z1 \
    xz-utils \
    openjdk-17-jdk \
    ruby-full \
    build-essential \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Set Java environment
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH="${JAVA_HOME}/bin:${PATH}"

# Install Flutter 3.27.4
ENV FLUTTER_VERSION=3.27.4
ENV FLUTTER_HOME=/opt/flutter-${FLUTTER_VERSION}

RUN curl -fsSL https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz \
    | tar -xJ -C /opt/ \
    && mv /opt/flutter /opt/flutter-${FLUTTER_VERSION} \
    && ln -s /opt/flutter-${FLUTTER_VERSION} /opt/flutter

# Change ownership and grant full permissions to runner
RUN chown -R runner:runner ${FLUTTER_HOME} \
    && chmod -R 777 ${FLUTTER_HOME} \
    && git config --global --add safe.directory ${FLUTTER_HOME}

# Ensure Flutter is in PATH
ENV PATH="${FLUTTER_HOME}/bin:${PATH}"

# Set up Android SDK
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV ANDROID_HOME=${ANDROID_SDK_ROOT}
ENV PATH="${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/emulator:${PATH}"

# Download and install Android Command Line Tools
RUN mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools \
    && curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -o cmdline-tools.zip \
    && unzip cmdline-tools.zip -d ${ANDROID_SDK_ROOT}/cmdline-tools \
    && mv ${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools ${ANDROID_SDK_ROOT}/cmdline-tools/latest \
    && rm cmdline-tools.zip

# Accept SDK licenses and install SDK packages
RUN yes | sdkmanager --licenses \
    && sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

# Ensure runner user has permissions
RUN chown -R runner:runner ${ANDROID_SDK_ROOT} \
    && chmod -R 777 ${ANDROID_SDK_ROOT}

RUN gem install bundler

USER runner
RUN flutter doctor --android-licenses && flutter precache

# Set Flutter safe directory for Git
RUN git config --global --add safe.directory ${FLUTTER_HOME}


ENTRYPOINT ["/home/runner/run.sh"]
